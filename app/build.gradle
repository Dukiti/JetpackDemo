plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    id("kotlin-kapt")
    id("com.google.dagger.hilt.android")
    id "flavor-config"
    id "android-compose"
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def mockEnable = properties.getProperty("MOCK_ENABLE", "false")

android {
    namespace 'com.dungnm.example.compose'
    compileSdk 34

    defaultConfig {
        applicationId "com.dungnm.example.compose"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"
        resConfigs("en", "vi")
        buildConfigField "boolean", "MOCK_ENABLE", mockEnable
        testInstrumentationRunner "com.dungnm.example.compose.MainTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            storeFile file("..\\NoSignKey.jks")
            storePassword "NoSignKey"
            keyAlias "NoSignKey"
            keyPassword "NoSignKey"
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            File proguardDir = file("..\\proguard")
            File defaultProguardFile = getDefaultProguardFile("proguard-android-optimize.txt")
            List<File> list = new ArrayList<File>()
            list.add(defaultProguardFile)
            for (File i : proguardDir.listFiles()) {
                if (i.isFile() && i.getName().endsWith(".pro")) {
                    list.add(i)
                }
            }
            println("2139810791" + list)
            setProguardFiles(list)

//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),'proguard-rules.pro',  '..\\proguard\\remove-log-rule.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
//        compose true
        buildConfig true
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}


dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
//    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.androidx.runtime.livedata
    implementation libs.androidx.appcompat
    implementation(libs.coil.compose)
    implementation libs.androidx.material.icons.extended

    // retrofit
    implementation(libs.retrofit.sit)
    implementation(libs.retrofit.gson.sit)


    implementation libs.logging.interceptor

    implementation(libs.hilt.android)
    kapt(libs.hilt.android.compiler)
    kapt(libs.androidx.hilt.compiler)
    implementation(libs.hilt.navigation.compose)

    implementation project(':core:base')
    implementation project(':feature:login')
    implementation project(':feature:home')
    implementation project(':feature:setting')

    // Test

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2")

    androidTestImplementation libs.hilt.android.testing
    kaptAndroidTest libs.hilt.android.compiler
    androidTestAnnotationProcessor libs.hilt.android.compiler

}